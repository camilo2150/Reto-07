import tkinter as tk
from tkinter import ttk, messagebox

#el Diccionario con los productos del menú
menu = {
    "Hamburguesa": {"price": 12.0, "type": "MainCourse"},
    "Pizza": {"price": 15.0, "type": "MainCourse"},
    "Refresco": {"price": 3.0, "type": "Beverage"},
    "Agua": {"price": 2.0, "type": "Beverage"},
    "Helado": {"price": 5.0, "type": "Dessert"},
    "Pastel": {"price": 6.0, "type": "Dessert"}
}

# Clases básicas para productos
class MenuItem:
    def __init__(self, name, price):
        self.name = name
        self.price = price

    def get_price(self):
        return self.price

class MainCourse(MenuItem): pass
class Beverage(MenuItem): pass
class Dessert(MenuItem): pass

# Clase para manejar un pedido
class Order:
    def __init__(self):
        self.items = []

    def add_item(self, item):
        self.items.append(item)

    def calculate_total(self):
        total = 0
        has_main = any(isinstance(i, MainCourse) for i in self.items)
        for item in self.items:
            if isinstance(item, Beverage) and has_main:
                total += item.get_price() * 0.9
            else:
                total += item.get_price()
        return total

# Interfaz 
class App:
    def __init__(self, root):
        self.root = root
        self.root.title("Sistema de Pedidos - Restaurante")

        self.order = Order()

        # Título
        tk.Label(root, text="Menú del Restaurante", font=("Arial", 14)).pack(pady=5)

        #el Combo con productos
        self.producto = ttk.Combobox(root, width=40, state="readonly")
        self.producto['values'] = [f"{k} - ${v['price']} ({v['type']})" for k, v in menu.items()]
        self.producto.pack(pady=5)

        #un Botón para agregar al pedido
        tk.Button(root, text="Agregar al pedido", command=self.agregar_producto).pack(pady=5)

        #la Lista del pedido actual
        self.lista = tk.Listbox(root, width=50, height=8)
        self.lista.pack(pady=5)

        #el Botón para mostrar el total
        tk.Button(root, text="Calcular total y pagar", command=self.procesar_pago).pack(pady=5)

        # la Etiqueta con un total
        self.total_label = tk.Label(root, text="Total: $0.00", font=("Arial", 12, "bold"))
        self.total_label.pack(pady=5)

    def agregar_producto(self):
        seleccionado = self.producto.get()
        if not seleccionado:
            return
        nombre = seleccionado.split(" - ")[0]
        datos = menu[nombre]
        tipo = datos["type"]
        precio = datos["price"]

        if tipo == "MainCourse":
            item = MainCourse(nombre, precio)
        elif tipo == "Beverage":
            item = Beverage(nombre, precio)
        else:
            item = Dessert(nombre, precio)

        self.order.add_item(item)
        self.lista.insert(tk.END, f"{nombre} - ${precio:.2f}")

    def procesar_pago(self):
        total = self.order.calculate_total()
        self.total_label.config(text=f"Total: ${total:.2f}")
        messagebox.showinfo("Pago", f"Pago procesado. Total: ${total:.2f}")
        self.order = Order()
        self.lista.delete(0, tk.END)

# aqui se puede Ejecutar la interfaz
if __name__ == "__main__":
    root = tk.Tk()
    app = App(root)
    root.mainloop()
